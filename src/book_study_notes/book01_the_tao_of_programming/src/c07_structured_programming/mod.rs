//! # 第七章 结构化编程
//! 编程是一门技术，它可以解决很多问题，创造很多新事务，甚至改变世界。<br/>
//! 编程更是一门艺术，是开发者的精神实践活动，其中蕴含了开发者对于客观世界的认识和反映。<br/>
//! 在外行人眼里，由26个英文字母加各种符号组合而成的程序代码可能毫无美感可言。<br/>
//! 那么编程的艺术性到底在哪里呢？对于开发者来说，编程的艺术性在于其组织结构极具审美价值。<br/>
//!
//! 面向对象范式在代码结构化方面的优点在于更加符合直觉，缺点是性能差，过度封装，而基于类继承的方式也会造成强耦合。<br/>
//! 函数式范式的优点在于它的核心思想是“组合优于继承”，与面向对象范式相比，其复用的粒度更小，更自由灵活，耦合程度更低，但学习成本更高。<br/>
//!
//! Rust作为现代化编程语言，汲取了两个不同编程范式的优点，提供了结构体、枚举体、trait这三驾马车来撑起程序的结构。<br/>
//! 本章主要围绕结构体和枚举体来阐述如何使用Rust进行结构化编程。<br/>


mod t7_1_0_oop;
mod t7_1_1_struct_color;
mod t7_1_2_enum_color;
mod t7_2_0_design_mode;
